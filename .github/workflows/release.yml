name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Release version"
        required: true
      next:
        description: "Next version"
        required: true

env:
  JIKKOU_VERSION: 'latest'
  JIKKOU_CONFIG: './.jikkou/config.json'

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub repository'
        uses: actions/checkout@v4
        with:
          clean: true
          # required for JReleaser to work properly. Without that, JReleaser might fail or behave incorrectly.
          fetch-depth: 0

      - name: 'Setup Jikkou'
        uses: streamthoughts/setup-jikkou@v0.2.0
        with:
          jikkou_version: ${{ env.JIKKOU_VERSION }}
          jikkou_config: ${{ env.JIKKOU_CONFIG }}

      - name: 'Deploy Schemas'
        id: deploy
        run: |
          jikkou apply --files ./resources/subjects --file-name '**/*.yaml'
        env:
          SCHEMA_REGISTRY_URL: ${{ secrets.SCHEMA_REGISTRY_URL }}
          SCHEMA_REGISTRY_AUTH_USER: ${{ secrets.SCHEMA_REGISTRY_AUTH_USER }}
          SCHEMA_REGISTRY_AUTH_PASSWORD: ${{ secrets.SCHEMA_REGISTRY_AUTH_PASSWORD }}

      - name: 'Save Jikkou Output'
        if: always()
        run: |
          cat << EOF > jikkou.stdout.log
          ${{ steps.deploy.outputs.stdout }} 
          EOF
          cat << EOF > jikkou.stderr.log
          ${{ steps.deploy.outputs.stderr }} 
          EOF

      - name: 'Configure Git'
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: 'Update version'
        id: version
        run: |
          echo "${{ github.event.inputs.next }}" >> VERSION
          git add VERSION
          git commit -m "ci: releasing version ${{ env.RELEASE_VERSION }} ðŸŽ‰"
          git push --atomic origin HEAD:main
          HEAD=$(git rev-parse HEAD)
          echo "HEAD=$HEAD" >> $GITHUB_OUTPUT
          echo "RELEASE_VERSION=$RELEASE_VERSION" >> $GITHUB_OUTPUT

      # Create a release
      - name: Run JReleaser
        uses: jreleaser/release-action@v2
        with:
          arguments: "release --auto-config"
        env:
          JRELEASER_PROJECT_NAME: jikkou-gitops-demo
          JRELEASER_PROJECT_VERSION: ${{ github.event.inputs.version }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Persist logs
      - name: JReleaser release output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jreleaser-release
          path: |
            out/jreleaser/trace.log
            out/jreleaser/output.properties

      - name: Jikkou execution output
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jikkou-deploy
          path: |
            jikkou.stdout.log
            jikkou.stderr.log